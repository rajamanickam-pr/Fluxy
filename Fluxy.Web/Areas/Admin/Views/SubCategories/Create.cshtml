@model Fluxy.Data.EntityModels.Categories.SubCategory

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">SubCategory Create</h3>
                </div>
                @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                {
                    <div class="alert alert-error">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    </div>
                }
                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" }, required = "required" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="box-footer">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
